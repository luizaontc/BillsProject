// <auto-generated />
using System;
using Bills.Domain.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bills.Domain.Migrations
{
    [DbContext(typeof(BillsProjectContext))]
    [Migration("20240904021223_testetabela2")]
    partial class testetabela2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bills.Domain.Entities.Bill", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("money")
                        .HasColumnName("amount");

                    b.Property<string>("BillsName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("billsName");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("description");

                    b.Property<DateOnly>("DueDate")
                        .HasColumnType("date")
                        .HasColumnName("dueDate");

                    b.Property<int?>("Installments")
                        .HasColumnType("int")
                        .HasColumnName("installments");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("Bills.Domain.Entities.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NameBr")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name_br");

                    b.Property<string>("NameEn")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name_en");

                    b.Property<string>("Symbol")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("symbol");

                    b.HasKey("Id");

                    b.ToTable("Currency", (string)null);
                });

            modelBuilder.Entity("Bills.Domain.Entities.InstallmentBill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("money")
                        .HasColumnName("amount");

                    b.Property<long?>("BillsId")
                        .HasColumnType("bigint")
                        .HasColumnName("billsId");

                    b.Property<DateOnly>("DueDate")
                        .HasColumnType("date")
                        .HasColumnName("dueDate");

                    b.Property<int?>("InstallmentNumber")
                        .HasColumnType("int")
                        .HasColumnName("installment_number");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillsId");

                    b.HasIndex("UserId");

                    b.ToTable("InstallmentBills");
                });

            modelBuilder.Entity("Bills.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("Birthday")
                        .HasColumnType("date")
                        .HasColumnName("birthday");

                    b.Property<int?>("Currency")
                        .HasColumnType("int")
                        .HasColumnName("currency");

                    b.Property<string>("Document")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("document");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("name");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("Currency");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Bills.Domain.Entities.Bill", b =>
                {
                    b.HasOne("Bills.Domain.Entities.User", "User")
                        .WithMany("Bills")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Bills_Users");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bills.Domain.Entities.InstallmentBill", b =>
                {
                    b.HasOne("Bills.Domain.Entities.Bill", "Bills")
                        .WithMany("InstallmentBills")
                        .HasForeignKey("BillsId")
                        .HasConstraintName("FK_InstallmentBills_Bills");

                    b.HasOne("Bills.Domain.Entities.User", null)
                        .WithMany("InstallmentBills")
                        .HasForeignKey("UserId");

                    b.Navigation("Bills");
                });

            modelBuilder.Entity("Bills.Domain.Entities.User", b =>
                {
                    b.HasOne("Bills.Domain.Entities.Currency", "CurrencyNavigation")
                        .WithMany("Users")
                        .HasForeignKey("Currency")
                        .HasConstraintName("FK_Users_Currency");

                    b.Navigation("CurrencyNavigation");
                });

            modelBuilder.Entity("Bills.Domain.Entities.Bill", b =>
                {
                    b.Navigation("InstallmentBills");
                });

            modelBuilder.Entity("Bills.Domain.Entities.Currency", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Bills.Domain.Entities.User", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("InstallmentBills");
                });
#pragma warning restore 612, 618
        }
    }
}
